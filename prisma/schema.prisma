// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../lib/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id    Int    @id @default(autoincrement())
  fullName  String
  email String @unique
  createdDate DateTime @default(now())
  role  Role @default(USER)
  password  String
  products Product[]
  purchases Product [] @relation("BuyerProducts")
  bids Bid[]
}

enum Role {
  USER
  ADMIN
}



model Product {
  id            String         @id @default(uuid())
  title         String
  description   String
  price         Float
  createdAt     DateTime       @default(now())
  userId        Int
  seller        User           @relation(fields: [userId], references: [id])
  buyerId       Int?
  buyer         User?          @relation("BuyerProducts", fields: [buyerId], references: [id])
  category      String
  condition     String
  images        ProductImage[]
  location      String
  sellingMethod String
  shippingOption String
  auctionEndsAt DateTime?
  status String @default("active")
  currentBid    Float?
  bids Bid[]
}

model Bid {
  id        Int      @id @default(autoincrement())
  amount    Float
  createdAt DateTime @default(now())
  bidderId  Int
  productId String
  bidder    User     @relation(fields: [bidderId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])
}

model ProductImage {
  id        Int     @id @default(autoincrement())
  imageUrl  String
  product   Product @relation(fields: [productId], references: [id])
  productId String

  @@unique([imageUrl, productId])
}